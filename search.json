[{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://saulo-chaves.github.io/ProbBreed/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Saulo Chaves. Author, maintainer. Kaio Dias. Author, copyright holder. Matheus Krause. Author.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chaves SFS, Krause MD, Dias LAS, Garcia AAF, Dias KOG (2024). “ProbBreed: novel tool calculating risk cultivar recommendation multienvironment trials.” G3 Genes|Genomes|Genetics, 14(3), jkae013. doi:10.1093/g3journal/jkae013.","code":"@Article{ProbBreed_paper,   title = {ProbBreed: a novel tool for calculating the risk of cultivar recommendation in multienvironment trials},   author = {Saulo F. S. Chaves and Matheus D. Krause and Luiz A. S. Dias and Antonio A. F. Garcia and Kaio O. G. Dias},   journal = {G3 Genes|Genomes|Genetics},   year = {2024},   volume = {14},   number = {3},   pages = {jkae013},   doi = {10.1093/g3journal/jkae013}, }"},{"path":"https://saulo-chaves.github.io/ProbBreed/index.html","id":"probbreed","dir":"","previous_headings":"","what":"Probability Theory for Selecting Candidates in Plant Breeding","title":"Probability Theory for Selecting Candidates in Plant Breeding","text":"ProbBreed employs Bayesian statistics analyse multi-environment trials’ data, uses outputs estimate marginal pairwise probabilities superior performance superior stability genotypes, well conditional probability superior performance. method thoroughly described https://doi.org/10.1007/s00122-022-04041-y.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Probability Theory for Selecting Candidates in Plant Breeding","text":"can install CRAN version ProbBreed using following command: Alternatively, can install development version ProbBreed GitHub :","code":"install.packages(\"ProbBreed\") # install.packages(\"devtools\") devtools::install_github(\"saulo-chaves/ProbBreed\")"},{"path":"https://saulo-chaves.github.io/ProbBreed/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Probability Theory for Selecting Candidates in Plant Breeding","text":"Currently, ProbBreed nine available models implemented bayes_met function. See ?bayes_met details. examples using maize example dataset described : gen, loc, repl, year reg column names contain information genotypes, environments (locations), replicates, years (seasons) regions (mega-environments). maize multi-year information, year = NULL. res.het indicates per-environmental residual variance estimated. trait column data contain phenotypic observations. arguments specifications model fitting: number iterations, cores chains. Feel free customize options according necessity. output function object class stanfit, used extr_outs function processing computing probabilities per se. function also provides useful diagnostics. use : object class extr provided function contains effects’ posterior maximum posterior, models’ variance components posterior predictive checks. : can also plot S3 method useful visualizations. e.g., comparison empirical sampled phenotype illustrates model’s convergence:  See ?plot.extr details options. two steps, everything set compute probabilities. can done using function prob_sup: basic workflow using available data : function generates object class probsup, contains two lists: across within. names suggest, across list across-environments probabilities, suitable broader recommendation. Conversely, within results appropriate specific recommendations. example, probability superior performances across within environments: S3 method plot also available probsup objects. : Probability superior performance across environments  Pairwise probability superior performance across environments  Probability superior stability  Probability superior performance within environments  See options ?plot.probsup. estimation probabilities strictly related key questions constantly arises plant breeding, like: risk recommending selection candidate target population environments? probability given selection candidate good performance recommended target population environments? specific environment? probability given selection candidate better performance cultivar check target population environments? specific environments? probable given selection candidate performs similarly across environments? chances given selection candidate stable cultivar check target population environments? probability given selection candidate superior invariable performance across environments? detailed tutorial, see https://saulo-chaves.github.io/ProbBreed_site/.","code":"library(ProbBreed) mod = bayes_met(data = maize,                  gen = \"Hybrid\",                 loc = \"Location\",                 repl = c(\"Rep\",\"Block\"),                 trait = \"GY\",                  reg = \"Region\",                 year = NULL,                  res.het = TRUE,                  iter = 4000, cores = 4, chain = 4) outs = extr_outs(model = mod,                  probs = c(0.05, 0.95),                  verbose = TRUE) outs$variances #>             effect   var     sd naive.se HPD_0.05 HPD_0.95 #> 1              Rep 0.036  0.040    0.000    0.001    0.108 #> 2            Block 0.214  0.049    0.001    0.137    0.298 #> 3           Hybrid 0.217  0.075    0.001    0.118    0.353 #> 4         Location 7.995  3.864    0.043    3.773   15.124 #> 5  Hybrid:Location 0.369  0.068    0.001    0.260    0.485 #> 6           Region 4.712 18.433    0.206    0.013   17.110 #> 7    Hybrid:Region 0.056  0.041    0.000    0.002    0.130 #> 8       error_env1 0.879  0.200    0.002    0.595    1.236 #> 9       error_env2 0.945  0.257    0.003    0.593    1.418 #> 10      error_env3 1.398  0.315    0.004    0.961    1.965 #> 11      error_env4 0.591  0.147    0.002    0.388    0.862 #> 12      error_env5 1.062  0.240    0.003    0.732    1.494 #> 13      error_env6 1.453  0.327    0.004    0.980    2.039 #> 14      error_env7 0.285  0.073    0.001    0.186    0.420 #> 15      error_env8 2.000  0.476    0.005    1.311    2.847 #> 16      error_env9 0.581  0.165    0.002    0.362    0.884 #> 17     error_env10 0.628  0.150    0.002    0.423    0.905 #> 18     error_env11 1.254  0.288    0.003    0.851    1.779 #> 19     error_env12 0.456  0.116    0.001    0.296    0.670 #> 20     error_env13 0.732  0.179    0.002    0.484    1.062 #> 21     error_env14 1.834  0.401    0.004    1.264    2.556 #> 22     error_env15 0.826  0.189    0.002    0.567    1.172 #> 23     error_env16 1.813  0.422    0.005    1.221    2.584 outs$ppcheck #>                   Diagnostics #> p.val_max              0.3390 #> p.val_min              0.3222 #> p.val_median           0.5479 #> p.val_mean             0.5011 #> p.val_sd               0.5294 #> Eff_No_parameters    184.3898 #> WAIC2               3924.8912 #> mean_Rhat              1.0005 #> Eff_sample_size        0.8484 plot(outs) results = prob_sup(extr = outs,                     int = .2,                    increase = TRUE,                     save.df = FALSE,                     verbose = TRUE) head(results$across$perfo) #>     ID     prob #> 36  G9 0.997500 #> 1   G1 0.920000 #> 22 G29 0.788500 #> 24 G30 0.629375 #> 5  G13 0.616250 #> 35  G8 0.569000 head(results$within$perfo$gl) #>   gen       E1      E10      E11      E12      E13      E14      E15      E16 #> 1  G1 0.984000 0.277875 0.386375 0.434125 0.262625 0.953625 0.311625 0.972625 #> 2 G10 0.010250 0.000875 0.001750 0.002500 0.026500 0.068000 0.000125 0.043000 #> 3 G11 0.006250 0.100125 0.110625 0.004875 0.608000 0.111875 0.745375 0.094750 #> 4 G12 0.153875 0.093000 0.045125 0.058750 0.064375 0.302125 0.173250 0.569250 #> 5 G13 0.202875 0.194625 0.136375 0.134125 0.070375 0.595250 0.807125 0.068500 #> 6 G14 0.000000 0.006750 0.111375 0.156500 0.030375 0.070875 0.000375 0.023625 #>         E2       E3       E4       E5       E6       E7       E8       E9 #> 1 0.899000 0.619250 0.907125 0.522125 0.302500 0.005500 0.863875 0.385625 #> 2 0.093000 0.199250 0.001625 0.042875 0.024375 0.001750 0.000250 0.044000 #> 3 0.020625 0.031625 0.014250 0.110000 0.340375 0.017375 0.049625 0.229500 #> 4 0.413625 0.602125 0.193125 0.389125 0.430500 0.819750 0.160375 0.313000 #> 5 0.234375 0.705375 0.684750 0.606250 0.825625 0.467125 0.118750 0.537375 #> 6 0.001625 0.048000 0.122625 0.114750 0.631000 0.025000 0.037875 0.065000 plot(results) plot(results, category = \"pair_perfo\", level = \"across\") plot(results, category = \"stabi\") plot(results, category = \"perfo\", level = \"within\")"},{"path":"https://saulo-chaves.github.io/ProbBreed/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Probability Theory for Selecting Candidates in Plant Breeding","text":"Thank using ProbBreed! Please, forget cite:","code":"citation('ProbBreed')"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/ProbBreed-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'ProbBreed' package. — ProbBreed-package","title":"The 'ProbBreed' package. — ProbBreed-package","text":"ProbBreed uses probability theory Bayesian framework calculating risk selecting candidates multi-environment context. Contained functions used fit Bayesian multi-environment model (based available presets), extract posterior values maximum posterior values, compute variance components, check model’s convergence, calculate probabilities. across within-environments scopes, package computes probability superior performance pairwise probability superior performance. Furthermore, probability superior stability pairwise probability superior stability across environments estimated.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/ProbBreed-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'ProbBreed' package. — ProbBreed-package","text":"Stan Development Team (NA). RStan: R interface Stan. R package version 2.32.6. https://mc-stan.org Dias, K. O. G, Santos J. P. R., Krause, M. D., Piepho H. -P., Guimarães, L. J. M., Pastina, M. M., Garcia, . . F. (2022). Leveraging probability concepts cultivar recommendation multi-environment trials. Theoretical Applied Genetics, 133(2):443-455. doi:10.1007/s00122-022-04041-y","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/ProbBreed-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The 'ProbBreed' package. — ProbBreed-package","text":"Maintainer: Saulo Chaves saulo.chaves@ufv.br (ORCID) Authors: Kaio Dias kaio.o.dias@ufv.br (ORCID) [copyright holder] Matheus Krause mdkrause@iastate.edu (ORCID)","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/bayes_met.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian model for multi-environment trials — bayes_met","title":"Bayesian model for multi-environment trials — bayes_met","text":"Fits Bayesian multi-environment model using rstan, R interface Stan.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/bayes_met.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian model for multi-environment trials — bayes_met","text":"","code":"bayes_met(   data,   gen,   loc,   repl,   trait,   reg = NULL,   year = NULL,   res.het = FALSE,   iter = 2000,   cores = 1,   chains = 4,   pars = NA,   warmup = floor(iter/2),   thin = 1,   seed = sample.int(.Machine$integer.max, 1),   init = \"random\",   verbose = FALSE,   algorithm = c(\"NUTS\", \"HMC\", \"Fixed_param\"),   control = NULL,   include = TRUE,   show_messages = TRUE,   ... )"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/bayes_met.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian model for multi-environment trials — bayes_met","text":"data data frame interpret variables declared arguments. gen, loc string. name columns contain evaluated candidates locations (environments, working factor combinations), respectively. repl string, vector, NULL. trial randomized complete blocks design, repl string representing name column corresponds blocks. trial randomized incomplete blocks design, repl string vector containing name columns correspond replicate block effects first second positions, respectively (c(replicate, block)). data replicates, repl must NULL. trait string. analysed variable. Currently, single-trait models fitted. reg string NULL. name column contain information regions mega-environments. NULL (default) applicable. year string NULL. name column contain information years (seasons). NULL (default) applicable. res.het model consider heterogeneous residual variances? Defaults FALSE. TRUE, model estimate one residual variance per location (environmnet). iter positive integer specifying number iterations     chain (including warmup). default 2000. cores Number cores use executing chains parallel,     defaults 1 recommend setting mc.cores option     many processors hardware RAM allow (    number chains). chains positive integer specifying number Markov chains.     default 4. pars vector character strings specifying parameters interest.     default NA indicating parameters model.     include = TRUE, samples parameters named pars     stored fitted results. Conversely, include = FALSE,     samples parameters except named pars     stored fitted results. warmup positive integer specifying number warmup (aka burnin)     iterations per chain. step-size adaptation (default),     also controls number iterations adaptation run (    hence warmup samples used inference). number     warmup iterations smaller iter default     iter/2. thin positive integer specifying period saving samples.     default 1, usually recommended value. seed seed random number generation. default generated     1 maximum integer supported R machine. Even     multiple chains used, one seed needed, chains     seeds derived first chain avoid dependent samples.     seed specified number, .integer applied .     .integer produces NA, seed generated randomly.     seed can also specified character string digits,     \"12345\", converted integer. init Initial values specification. See detailed documentation     init argument stan. verbose TRUE FALSE: flag indicating whether     print intermediate output Stan console, might     helpful model debugging. algorithm One sampling algorithms implemented Stan.     Current options \"NUTS\" (-U-Turn sampler, Hoffman Gelman 2011, Betancourt 2017),     \"HMC\" (static HMC), \"Fixed_param\". default     preferred algorithm \"NUTS\". control named list parameters control sampler's     behavior. See details documentation control argument     stan. include Logical scalar defaulting TRUE indicating     whether include exclude parameters given     pars argument. FALSE, entire multidimensional     parameters can excluded, rather particular elements . show_messages Either logical scalar (defaulting TRUE)     indicating whether print summary Informational Messages     screen chain finished character string naming path     summary stored. Setting FALSE recommended     unless sure model correct numerical     error. ... Additional arguments can chain_id, init_r,     test_grad, append_samples, refresh,     enable_random_init. See documentation stan.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/bayes_met.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian model for multi-environment trials — bayes_met","text":"object S4 class stanfit representing    fitted results. Slot mode object    indicates sampling done .","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/bayes_met.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian model for multi-environment trials — bayes_met","text":"function nine available models, fitted according options set arguments: Entry-mean model : fitted repl = NULL, reg = NULL year = NULL: $$y = \\mu + g + l + \\varepsilon$$ \\(y\\) phenotype, \\(\\mu\\) intercept, \\(g\\) genotypic effect, \\(l\\) location (environment) effect, \\(\\varepsilon\\) error (contains genotype--location interaction, case). Randomized complete blocks design : fitted repl single string. fit different models depending reg year NULL: reg = NULL year = NULL : $$y = \\mu + g + l + gl + r + \\varepsilon$$ \\(gl\\) genotype--location effect, \\(r\\) replicate effect. reg = \"reg\" year = NULL : $$y = \\mu + g + m + l + gl + gm + r + \\varepsilon$$ \\(m\\) region effect, \\(gm\\) genotype--region effect. reg = NULL year = \"year\" : $$y = \\mu + g + t + l + gl + gt + r + \\varepsilon$$ \\(t\\) year effect, \\(gt\\) genotype--year effect. reg = \"reg\" year = \"year\" : $$y = \\mu + g + m + t + l + gl + gm + gt + r + \\varepsilon$$ Incomplete blocks design : fitted repl string vector size 2. fit different models depending reg year NULL: reg = NULL year = NULL : $$y = \\mu + g + l + gl + r + b + \\varepsilon$$ \\(b\\) block within replicates effect. reg = \"reg\" year = NULL : $$y = \\mu + g + m + l + gl + gm + r + b + \\varepsilon$$ reg = NULL year = \"year\" : $$y = \\mu + g + t + l + gl + gt + r + b + \\varepsilon$$ reg = \"reg\" year = \"year\" : $$y = \\mu + g + m + t + l + gl + gm + gt + r + b + \\varepsilon$$ models described predefined priors: $$x \\sim \\mathcal{N} \\left( 0, S^{[x]} \\right)$$ $$\\sigma \\sim \\mathcal{HalfCauchy}\\left( 0, S^{[\\sigma]} \\right)$$ \\(x\\) can effect error, \\(\\sigma\\) standard deviation likelihood. res.het = TRUE, \\(\\sigma_k \\sim \\mathcal{HalfCauchy}\\left( 0, S^{\\left[ \\sigma_k \\right]} \\right)\\). hyperpriors set follows: $$S^{[x]} \\sim \\mathcal{HalfCauchy}\\left( 0, \\phi \\right)$$ \\(\\phi\\) known global hyperparameter defined \\(\\phi = max(y) \\times 10\\). details usage bayes_met functions ProbBreed package can found https://saulo-chaves.github.io/ProbBreed_site/. Solutions convergence mixing issues can found https://mc-stan.org/misc/warnings.html.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/bayes_met.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Bayesian model for multi-environment trials — bayes_met","text":"sampling signature(object = \"stanmodel\")       Call sampler (NUTS, HMC, Fixed_param depending parameters)       draw samples model defined S4 class stanmodel       given data, initial values, etc.","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/bayes_met.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian model for multi-environment trials — bayes_met","text":"","code":"# \\donttest{ mod = bayes_met(data = maize,                 gen = \"Hybrid\",                 loc = \"Location\",                 repl = c(\"Rep\",\"Block\"),                 trait = \"GY\",                 reg = \"Region\",                 year = NULL,                 res.het = TRUE,                 iter = 2000, cores = 2, chain = 4) #> sed Time: 229.528 seconds (Warm-up) #> Chain 1:                258.426 seconds (Sampling) #> Chain 1:                487.954 seconds (Total) #> Chain 1:  #> Warning: There were 2 divergent transitions after warmup. See #> https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup #> to find out why this is a problem and how to eliminate them. #> Warning: Examine the pairs() plot to diagnose sampling problems #> Warning: The largest R-hat is 1.06, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess # }"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/extr_outs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract outputs from stanfit objects obtained from bayes_met — extr_outs","title":"Extract outputs from stanfit objects obtained from bayes_met — extr_outs","text":"Extracts outputs Bayesian model fitted using bayes_met(), provides diagnostics.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/extr_outs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract outputs from stanfit objects obtained from bayes_met — extr_outs","text":"","code":"extr_outs(model, probs = c(0.025, 0.975), verbose = FALSE)"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/extr_outs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract outputs from stanfit objects obtained from bayes_met — extr_outs","text":"model object class stanfit, obtained using bayes_met() probs vector two elements representing probabilities (decimal scale) considered computing quantiles. verbose logical value. TRUE, function indicate completed steps. Defaults FALSE","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/extr_outs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract outputs from stanfit objects obtained from bayes_met — extr_outs","text":"function returns object class extr, list : variances : data frame containing variance components model effects, standard deviation, naive standard error highest posterior density interval. post : list posterior effects, data generated model. map : list maximum posterior values effect ppcheck : matrix containing p-values maximum, minimum, median, mean standard deviation; effective number parameters, WAIC2 value, Rhat effective sample size.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/extr_outs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract outputs from stanfit objects obtained from bayes_met — extr_outs","text":"details usage extr_outs functions ProbBreed package can found https://saulo-chaves.github.io/ProbBreed_site/.","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/extr_outs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract outputs from stanfit objects obtained from bayes_met — extr_outs","text":"","code":"# \\donttest{ mod = bayes_met(data = maize,                 gen = \"Hybrid\",                 loc = \"Location\",                 repl = c(\"Rep\",\"Block\"),                 trait = \"GY\",                 reg = \"Region\",                 year = NULL,                 res.het = TRUE,                 iter = 2000, cores = 2, chain = 4) #>                 400.088 seconds (Total) #> Chain 2:  #> Warning: There were 2 chains where the estimated Bayesian Fraction of Missing Information was low. See #> https://mc-stan.org/misc/warnings.html#bfmi-low #> Warning: Examine the pairs() plot to diagnose sampling problems #> Warning: The largest R-hat is 1.1, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess  outs = extr_outs(model = mod,                  probs = c(0.05, 0.95),                  verbose = TRUE) #> -> Posterior effects extracted #> -> Variances extracted #> -> Maximum posterior values extracted #> -> Posterior predictive checks computed #> 0 of 4000 iterations ended with a divergence. #> 0 of 4000 iterations saturated the maximum tree depth of 10. #> E-BFMI indicated possible pathological behavior: #>   Chain 2: E-BFMI = 0.169 #>   Chain 3: E-BFMI = 0.182 #> E-BFMI below 0.2 indicates you may need to reparameterize your model. # }"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/maize.html","id":null,"dir":"Reference","previous_headings":"","what":"Maize real data set — maize","title":"Maize real data set — maize","text":"dataset belongs value cultivation use maize trials Embrapa Maize Sorghum, used Dias et al. (2022). contains grain yield 32 single-cross hybrids four commercial checks (36 genotypes total) evaluated 16 locations across five regions mega-environments. trials laid incomplete blocks design, using block size 6 two replications per trial.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/maize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maize real data set — maize","text":"","code":"maize"},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/maize.html","id":"maize","dir":"Reference","previous_headings":"","what":"maize","title":"Maize real data set — maize","text":"data frame 823 rows 6 columns: Location 16 locations Region 5 regions Rep 2 replicates Block 6 blocks Hybrid 36 genotypes GY Grain yield (phenotypes)","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/plot.extr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots for the extr object — plot.extr","title":"Plots for the extr object — plot.extr","text":"Build plots using outputs stored extr object.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/plot.extr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots for the extr object — plot.extr","text":"","code":"# S3 method for class 'extr' plot(x, ..., category = \"ppdensity\")"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/plot.extr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots for the extr object — plot.extr","text":"x object class extr. ... Passed ggplot2::geom_histogram, category = histogram. Useful change number bins. category string indicating plot build. See options Details section.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/plot.extr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots for the extr object — plot.extr","text":"available options : ppdensity : Density plots empirical sampled data, useful assess model's convergence. density : Density plots model's effects. histogram : Histograms model's effects. traceplot: Trace plot showing changes effects' values across iterations chains.","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/plot.extr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots for the extr object — plot.extr","text":"","code":"# \\donttest{ mod = bayes_met(data = maize,                 gen = \"Hybrid\",                 loc = \"Location\",                 repl = c(\"Rep\",\"Block\"),                 trait = \"GY\",                 reg = \"Region\",                 year = NULL,                 res.het = TRUE,                 iter = 2000, cores = 2, chain = 4) #>           375.94 seconds (Sampling) #> Chain 2:                609.353 seconds (Total) #> Chain 2:  #> Warning: There were 5 transitions after warmup that exceeded the maximum treedepth. Increase max_treedepth above 10. See #> https://mc-stan.org/misc/warnings.html#maximum-treedepth-exceeded #> Warning: There were 3 chains where the estimated Bayesian Fraction of Missing Information was low. See #> https://mc-stan.org/misc/warnings.html#bfmi-low #> Warning: Examine the pairs() plot to diagnose sampling problems #> Warning: The largest R-hat is 1.13, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess  outs = extr_outs(model = mod,                  probs = c(0.05, 0.95),                  verbose = TRUE) #> -> Posterior effects extracted #> -> Variances extracted #> -> Maximum posterior values extracted #> -> Posterior predictive checks computed #> 0 of 4000 iterations ended with a divergence. #> 5 of 4000 iterations saturated the maximum tree depth of 10 (0.125%). #> Try increasing 'max_treedepth' to avoid saturation. #> E-BFMI indicated possible pathological behavior: #>   Chain 2: E-BFMI = 0.153 #>   Chain 3: E-BFMI = 0.121 #>   Chain 4: E-BFMI = 0.187 #> E-BFMI below 0.2 indicates you may need to reparameterize your model. plot(outs, category = \"ppdensity\")  plot(outs, category = \"density\")  plot(outs, category = \"histogram\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  plot(outs, category = \"traceplot\")  # }"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/plot.probsup.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots for the probsup object — plot.probsup","title":"Plots for the probsup object — plot.probsup","text":"Build plots using outputs stored probsup object.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/plot.probsup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots for the probsup object — plot.probsup","text":"","code":"# S3 method for class 'probsup' plot(x, ..., category = \"perfo\", level = \"across\")"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/plot.probsup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots for the probsup object — plot.probsup","text":"x object class probsup. ... currently used category string indicating plot build. See options Details section. level string indicating information level used building plots. Options \"across\" focusing probabilities across environments, \"within\" focus within-environment effects. Defaults \"across\".","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/plot.probsup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots for the probsup object — plot.probsup","text":"available options : hpd : caterpillar plot representing marginal genotypic value genotype, respective highest posterior density interval (95% represented thick line, 97.5% represented thin line). Available level = \"across\". perfo : level = \"across\", lollipop plot illustrating probabilities superior performance. level = \"within\", heatmap probabilities superior performance within environments. model reg /year fitted, multiple plots produced. stabi: lollipop plot probabilities superior stability. model reg /year fitted, multiple plots produced. Available level = \"across\". Unavailable entry-mean model used bayes_met. pair_perfo : level = \"across\", heatmap representing pairwise probability superior performance (probability genotypes x-axis superior. y-axis). level = \"within\", list heatmaps representing pairwise probability superior performance within environments.  model reg /year fitted, multiple plots (multiple lists) produced. option set, mandatory store outputs object. (e.g., pl <- plot(obj, category = \"pair_perfo\", level = \"within\")) can visualized one time. option level = \"within\" unavailable entry-mean model used bayes_met. pair_stabi: heatmap pairwise probabilities superior stability (probability genotypes x-axis stable y-axis). model reg /year fitted, multiple plots produced. Available level = \"across\". Unavailable entry-mean model used bayes_met. joint: lollipop plot joint probabilities superior performance stability. Unavailable entry-mean model used bayes_met.","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/plot.probsup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots for the probsup object — plot.probsup","text":"","code":"# \\donttest{ mod = bayes_met(data = maize,                 gen = \"Hybrid\",                 loc = \"Location\",                 repl = c(\"Rep\",\"Block\"),                 trait = \"GY\",                 reg = \"Region\",                 year = NULL,                 res.het = TRUE,                 iter = 2000, cores = 2, chain = 4) #>                409.002 seconds (Total) #> Chain 1:  #> Warning: There were 1 chains where the estimated Bayesian Fraction of Missing Information was low. See #> https://mc-stan.org/misc/warnings.html#bfmi-low #> Warning: Examine the pairs() plot to diagnose sampling problems #> Warning: The largest R-hat is 1.14, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess  outs = extr_outs(model = mod,                  probs = c(0.05, 0.95),                  verbose = TRUE) #> -> Posterior effects extracted #> -> Variances extracted #> -> Maximum posterior values extracted #> -> Posterior predictive checks computed #> 0 of 4000 iterations ended with a divergence. #> 0 of 4000 iterations saturated the maximum tree depth of 10. #> E-BFMI indicated possible pathological behavior: #>   Chain 4: E-BFMI = 0.165 #> E-BFMI below 0.2 indicates you may need to reparameterize your model.  results = prob_sup(extr = outs,                    int = .2,                    increase = TRUE,                    save.df = FALSE,                    verbose = FALSE)  plot(results, category = \"hpd\")  plot(results, category = \"perfo\", level = \"across\")  plot(results, category = \"perfo\", level = \"within\")  plot(results, category = \"stabi\")  plot(results, category = \"pair_perfo\", level = \"across\")  plwithin = plot(results, category = \"pair_perfo\", level = \"within\") plot(results, category = \"pair_stabi\")  plot(results, category = \"joint\")  # }"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/print.extr.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an object of class extr — print.extr","title":"Print an object of class extr — print.extr","text":"Print extr object R console","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/print.extr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an object of class extr — print.extr","text":"","code":"# S3 method for class 'extr' print(x, ...)"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/print.extr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an object of class extr — print.extr","text":"x object class extr ... currently used","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/print.probsup.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an object of class probsup — print.probsup","title":"Print an object of class probsup — print.probsup","text":"Print probsup object R console","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/print.probsup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an object of class probsup — print.probsup","text":"","code":"# S3 method for class 'probsup' print(x, ...)"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/print.probsup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an object of class probsup — print.probsup","text":"x object class probsup ... currently used","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/prob_sup.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilities of superior performance and stability — prob_sup","title":"Probabilities of superior performance and stability — prob_sup","text":"function estimates probabilities superior performance stability across environments, probabilities superior performance within environments.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/prob_sup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilities of superior performance and stability — prob_sup","text":"","code":"prob_sup(extr, int, increase = TRUE, save.df = FALSE, verbose = FALSE)"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/prob_sup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilities of superior performance and stability — prob_sup","text":"extr object class extr, obtained extr_outs function int numeric representing selection intensity (0 1) increase Logical.TRUE (default) selection increasing trait value, FALSE otherwise. save.df Logical. data frames saved work directory? TRUE saving, FALSE (default) otherwise. verbose logical value. TRUE, function indicate completed steps. Defaults FALSE.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/prob_sup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilities of superior performance and stability — prob_sup","text":"function returns object class probsup, contains two lists, one across-environments probabilities, another within-environments probabilities. entry-mean model used ProbBreed::bayes_met, across list available. across list following elements: g_hpd: Highest posterior density (HPD) posterior genotypic main effects. perfo: probabilities superior performance. pair_perfo: pairwise probabilities superior performance. stabi: list probabilities superior stability. contains data frames gl, gm (reg NULL) gt (year NULL). Unavailable entry-mean model used bayes_met. pair_stabi: list pairwise probabilities superior stability. contains data frames gl, gm (reg NULL) gt (year NULL). Unavailable entry-mean model used bayes_met. joint_prob: joint probabilities superior performance stability. Unavailable entry-mean model used bayes_met. within list following elements: perfo: list data frames containing probabilities superior performance within locations (gl), regions (gm) years (gt). pair_perfo: lists pairwise probabilities superior performance within locations (gl), regions (gm) years (gt).","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/prob_sup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probabilities of superior performance and stability — prob_sup","text":"Probabilities provide risk recommending selection candidate target population environments specific environment. prob_sup computes probabilities superior performance probabilities superior stability: Probability superior performance Let \\(\\Omega\\) represent subset selected genotypes based performance across environments. given genotype \\(j\\) belong \\(\\Omega\\) genotypic marginal value (\\(\\hat{g}_j\\)) high low enough compared peers. prob_sup leverages Monte Carlo discretized sampling posterior distribution emulate occurrence \\(S\\) trials. , probability \\(j^{th}\\) genotype belonging \\(\\Omega\\) ratio success (\\(\\hat{g}_j \\\\Omega\\)) events total number sampled events, follows: $$Pr\\left(\\hat{g}_j \\\\Omega \\vert y \\right) = \\frac{1}{S}\\sum_{s=1}^S{\\left(\\hat{g}_j^{(s)} \\\\Omega \\vert y\\right)}$$ \\(S\\) total number samples \\(\\left(s = 1, 2, ..., S \\right)\\), \\(\\left(g_j^{(s)} \\\\Omega \\vert y\\right)\\) indicator variable can assume two values: (1) \\(\\hat{g}_j^{(s)} \\\\Omega\\) \\(s^{th}\\) sample, (0) otherwise. \\(S\\) conditioned number iterations chains previously set bayes_met. Similarly, within-environment probability superior performance can applied individual environments. Let \\(\\Omega_k\\) represent subset superior genotypes \\(k^{th}\\) environment, probability \\(j^{th} \\\\Omega_k\\) can calculated follows: $$Pr\\left(\\hat{g}_{jk} \\\\Omega_k \\vert y\\right) = \\frac{1}{S} \\sum_{s=1}^S \\left(\\hat{g}_{jk}^{(s)} \\\\Omega_k \\vert y\\right)$$ \\(\\left(\\hat{g}_{jk}^{(s)} \\\\Omega_k \\vert y\\right)\\) indicator variable mapping success (1) \\(\\hat{g}_{jk}^{(s)}\\) exists \\(\\Omega_k\\), failure (0) otherwise, \\(\\hat{g}_{jk}^{(s)} = \\hat{g}_j^{(s)} + \\widehat{ge}_{jk}^{(s)}\\). Note computing within-environment probabilities, accounting interaction \\(j^{th}\\) genotype \\(k^{th}\\) environment. pairwise probabilities superior performance can also calculated across within environments. metric assesses probability \\(j^{th}\\) genotype superior another experimental genotype commercial check. calculations follows, across within environments, respectively: $$Pr\\left(\\hat{g}_{j} > \\hat{g}_{j^\\prime} \\vert y\\right) = \\frac{1}{S} \\sum_{s=1}^S \\left(\\hat{g}_{j}^{(s)} > \\hat{g}_{j^\\prime}^{(s)} \\vert y\\right)$$ $$Pr\\left(\\hat{g}_{jk} > \\hat{g}_{j^\\prime k} \\vert y\\right) = \\frac{1}{S} \\sum_{s=1}^S \\left(\\hat{g}_{jk}^{(s)} > \\hat{g}_{j^\\prime k}^{(s)} \\vert y\\right)$$ equations set selection direction positive. increase = FALSE, \\(>\\) simply switched \\(<\\). Probability superior stability probability makes direct analogy method Shukla (1972): stable genotype one low genotype--environment interaction variance \\([var(\\widehat{ge})]\\). Using probability principles previously described, probability superior stability given follows: $$Pr \\left[var \\left(\\widehat{ge}_{jk}\\right) \\\\Omega \\vert y \\right] = \\frac{1}{S} \\sum_{s=1}^S \\left[var \\left(\\widehat{ge}_{jk}^{(s)} \\right) \\\\Omega \\vert y \\right]$$ \\(\\left[var \\left(\\widehat{ge}_{jk}^{(s)} \\right) \\\\Omega \\vert y \\right]\\) indicates \\(var\\left(\\widehat{ge}_{jk}^{(s)}\\right)\\) exists \\(\\Omega\\) (1) (0). Pairwise probabilities superior stability also possible context: $$Pr \\left[var \\left(\\widehat{ge}_{jk} \\right) < var\\left(\\widehat{ge}_{j^\\prime k} \\right) \\vert y \\right] = \\frac{1}{S} \\sum_{s=1}^S \\left[var \\left(\\widehat{ge}_{jk} \\right)^{(s)} < var \\left(\\widehat{ge}_{j^\\prime k} \\right)^{(s)} \\vert y \\right]$$ Note \\(j\\) superior \\(j^\\prime\\) lower variance genotype--environment interaction effect. true regardless increase set TRUE FALSE. joint probability independent events product individual probabilities. estimated genotypic main effects variances GEI effects independent design, thus joint probability superior performance stability follows: $$Pr \\left[\\hat{g}_j \\\\Omega \\cap var \\left(\\widehat{ge}_{jk} \\right) \\\\Omega \\right] = Pr \\left(\\hat{g}_j \\\\Omega \\right) \\times Pr \\left[var \\left(\\widehat{ge}_{jk} \\right) \\\\Omega \\right]$$ estimation probabilities strictly related key questions constantly arises plant breeding: risk recommending selection candidate target population environments? probability given selection candidate good performance recommended target population environments? specific environment? probability given selection candidate better performance cultivar check target population environments? specific environments? probable given selection candidate performs similarly across environments? chances given selection candidate stable cultivar check target population environments? probability given selection candidate superior invariable performance across environments? details usage prob_sup, well function ProbBreed package can found https://saulo-chaves.github.io/ProbBreed_site/.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/prob_sup.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Probabilities of superior performance and stability — prob_sup","text":"Dias, K. O. G, Santos J. P. R., Krause, M. D., Piepho H. -P., Guimarães, L. J. M., Pastina, M. M., Garcia, . . F. (2022). Leveraging probability concepts cultivar recommendation multi-environment trials. Theoretical Applied Genetics, 133(2):443-455. doi:10.1007/s00122-022-04041-y Shukla, G. K. (1972) statistical aspects partioning genotype environmental componentes variability. Heredity, 29:237-245. doi:10.1038/hdy.1972.87","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/prob_sup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probabilities of superior performance and stability — prob_sup","text":"","code":"# \\donttest{ mod = bayes_met(data = maize,                 gen = \"Hybrid\",                 loc = \"Location\",                 repl = c(\"Rep\",\"Block\"),                 trait = \"GY\",                 reg = \"Region\",                 year = NULL,                 res.het = TRUE,                 iter = 2000, cores = 2, chain = 4) #>  Time: 269.948 seconds (Warm-up) #> Chain 1:                204.952 seconds (Sampling) #> Chain 1:                474.9 seconds (Total) #> Chain 1:  #> Warning: There were 3 chains where the estimated Bayesian Fraction of Missing Information was low. See #> https://mc-stan.org/misc/warnings.html#bfmi-low #> Warning: Examine the pairs() plot to diagnose sampling problems #> Warning: The largest R-hat is 1.15, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess  outs = extr_outs(model = mod,                  probs = c(0.05, 0.95),                  verbose = TRUE) #> -> Posterior effects extracted #> -> Variances extracted #> -> Maximum posterior values extracted #> -> Posterior predictive checks computed #> 0 of 4000 iterations ended with a divergence. #> 0 of 4000 iterations saturated the maximum tree depth of 10. #> E-BFMI indicated possible pathological behavior: #>   Chain 2: E-BFMI = 0.161 #>   Chain 3: E-BFMI = 0.188 #>   Chain 4: E-BFMI = 0.155 #> E-BFMI below 0.2 indicates you may need to reparameterize your model.  results = prob_sup(extr = outs,                    int = .2,                    increase = TRUE,                    save.df = FALSE,                    verbose = FALSE) # }"},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/soy.html","id":null,"dir":"Reference","previous_headings":"","what":"Soybean real data set — soy","title":"Soybean real data set — soy","text":"dataset belongs USDA Northern Region Uniform Soybean Tests, subset data used Krause et al. (2023). contains empirical best linear unbiased estimates genotypic means seed yield 39 experimental genotypes evaluated 14 locations. original data, available package SoyURT, 4,257 experimental genotypes evaluated 63 locations 31 years resulting 591 location-year combinations (environments) 39,006 yield values.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/soy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soybean real data set — soy","text":"","code":"soy"},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/reference/soy.html","id":"soy","dir":"Reference","previous_headings":"","what":"soy","title":"Soybean real data set — soy","text":"data frame 823 rows 3 columns: Loc 14 locations Gen 39 experimental genotypes Y 435 EBLUEs (phenotypes)","code":""},{"path":[]},{"path":"https://saulo-chaves.github.io/ProbBreed/news/index.html","id":"probbreed-1043","dir":"Changelog","previous_headings":"","what":"ProbBreed 1.0.4.3","title":"ProbBreed 1.0.4.3","text":"CRAN release: 2024-11-07 Corrected small inconsistency appeared unbalanced data used RCBD models without Region Year","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/news/index.html","id":"probbreed-1043-1","dir":"Changelog","previous_headings":"","what":"ProbBreed 1.0.4.3","title":"ProbBreed 1.0.4.3","text":"CRAN release: 2024-11-07 Corrected flaws prob_sup function models without Region Year fitted Corrected entry-mean model () Changed details documentation","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/news/index.html","id":"probbreed-1041","dir":"Changelog","previous_headings":"","what":"ProbBreed 1.0.4.1","title":"ProbBreed 1.0.4.1","text":"CRAN release: 2024-07-26 Added S3 methods. Removed plots functions’ outputs, sake optimization. Internally, added C+ structure using rstantools. Corrected entry-mean model.","code":""},{"path":"https://saulo-chaves.github.io/ProbBreed/news/index.html","id":"probbreed-101","dir":"Changelog","previous_headings":"","what":"ProbBreed 1.0.1","title":"ProbBreed 1.0.1","text":"CRAN release: 2023-06-26 Added NEWS.md file track changes package. Corrected errors prob_sup documentation Corrected Krause’s orcid description","code":""}]
